	//					if (i==271) {
//						T.write("i.txt",aySource[i].toString());
//						T.write("j.txt",ayTarget[j].toString());
//						T.msgbox("i=%s,j=%s,s[%s],T[%s],eq=%s,==%s",
//								i,j,aySource[i],ayTarget[j],
//								aySource[i].toString().equals(ayTarget[j].toString()),aySource[i]==ayTarget[j]
//								);
//					}
					
	
	
	public static String[] delString(String[] ayst, String... aysTarget) {
		String[] yst=new String[ayst.length];
		int ir=-1;
		for (int i = 0; i < ayst.length; i++) {
			for (int j = 0; j < aysTarget.length; j++) {
				if (ayst[i].equals(aysTarget[j])) {
					break;
				}
				if (j==(aysTarget.length-1)) {
					yst[++ir]=ayst[i];
				}
			}

		}
		return Arrays.copyOfRange(yst, 0, ir);
	} 
	/**********创建泛型数组？************/
	public static <Type> Type[] delTargetTest(Type[] aySource, Type... ayTarget) {
		Type[] yT=new Type[aySource.length];
		int ir=-1;
		for (int i = 0; i < aySource.length; i++) {
			for (int j = 0; j < ayTarget.length; j++) {
				if (aySource[i].equals(ayTarget[j])) {
					break;
				}
				if (j==(ayTarget.length-1)) {
					yT[++ir]=aySource[i];
				}
			}
		}
		return Arrays.copyOfRange(yT, 0, ir);
	}  
	
	/**@deprecated	
	 * 因为可以通过ast_filename判断是否是测试路径。
	 * @see qgb.T.autoPath;
	 * modified at 2014-09-24 12:45:12**/
	public static void write(String ast_filename, String ast_text) {
		FileWriter fw;
		try {
			qgb.T.autoPath(ast_filename)
//			if (abool_test) {
//				fw = new FileWriter(ast_fileast_filename);
//			} else {
			fw = new FileWriter(autoPath(ast_filename));
//			}
			fw.write(ast_text);
			fw.flush();
			// tprint(ast_text);
		} catch (IOException e) {

			e.printStackTrace();
		}
		//print( + "|" + cst_test_path + ast_filename);
		print(getMethodName(a));
	}